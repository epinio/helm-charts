# Specify the name of the application that is using this Upgrade Responder server
# This will be used to create a database named <application-name>_upgrade_responder
# in the InfluxDB to store all data for this Upgrade Responder
# The name must be in snake case format
applicationName: epinio

secret:
  name: upgrade-responder-secrets
  # Set this to true if you want to manage these secrets with helm
  managed: true
  influxDBUrl: ""
  influxDBUser: ""
  influxDBPassword: ""

# This configmap contains information about the latest release
# of the application that is using this Upgrade Responder
# Replace the information with the latest version of your application
configMap:
  responseConfig: |-
    {
      "versions": [{
        "name": "v1.0.0",
        "releaseDate": "2020-05-18T12:30:00Z",
        "tags": ["latest"]
      }]
    }
  requestSchema: |-
    {
      "appVersionSchema": {
        "dataType": "string",
        "maxLen": 200
      }
    }

replicaCount: 3

image:
  repository: longhornio/upgrade-responder
  tag: v0.2.0
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8314

flags:
  cacheSyncInterval: 1
  cacheSize: 100

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  hosts:
    - example.com
  tls:
    - secretName: example-com-tls
      hosts:
      - example.com
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
# grafana
grafana:
  plugins:
  - grafana-worldmap-panel
  ingress:
    enabled: true
    # hosts:
    # - "grafana.172.21.0.4.sslip.io"
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: InfluxDB
          type: influxdb
          url: http://upgrade-responder-influxdb.epinio:8086
          database: epinio_upgrade_responder
          access: proxy
          isDefault: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: 'default'
        type: file
        disableDeletion: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/standard
  # This will enable the loading of the dashboards from the ConfigMaps
  sidecar:
    dashboards:
      enabled: true
  dashboards:
    default:
      # This is the default upgrade-responder dashboard
      upgrade-responder-dashboard:
        gnetId: 14429
        datasource: InfluxDB
